{"version":3,"file":"frappe-gantt.min.js","sources":["../src/svg_utils.js","../src/arrow.js","../src/date_utils.js","../src/bar.js","../src/popup.js","../src/index.js"],"sourcesContent":["export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import { $, createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n        //  add event handling for Arrows\r\n        if(this.gantt.options.allow_dependency_editing)\r\n            this.setup_dependency_editing();\r\n    }\r\n    \r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n    \r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n    \r\n    //  add event handling for Arrows\r\n    setup_dependency_editing(){\r\n        $.on(this.element, 'dblclick', e => {\r\n            //  remove Arrow element, and delete dependency from task\r\n            var index = this.to_task.task.dependencies.indexOf(this.from_task.task.id);\r\n            this.to_task.task.dependencies.splice(index, 1);\r\n            this.element.remove();\r\n            this.gantt.setup_dependencies();\r\n            // fire dependencyAdded event\r\n            this.gantt.trigger_event('dependency_remove', [this.to_task.task]);\r\n        });\r\n        $.on(this.element, 'mouseenter', e => {\r\n            this.element.classList.add('hover');\r\n        });\r\n        $.on(this.element, 'mouseleave', e => {\r\n            this.element.classList.remove('hover');\r\n        });\r\n    }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nconst YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nconst month_names = {\r\n    en: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n    ],\r\n    es: [\r\n        'Enero',\r\n        'Febrero',\r\n        'Marzo',\r\n        'Abril',\r\n        'Mayo',\r\n        'Junio',\r\n        'Julio',\r\n        'Agosto',\r\n        'Septiembre',\r\n        'Octubre',\r\n        'Noviembre',\r\n        'Diciembre',\r\n    ],\r\n    ru: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n    ],\r\n    ptBr: [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro'\r\n    ],    \r\n    de: [\r\n\t\t'Januar',\r\n        'Februar',\r\n        'März',\r\n        'April',\r\n        'Mai',\r\n        'Juni',\r\n        'Juli',\r\n        'August',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Dezember'\r\n    ],\r\n    fr: [\r\n        'Janvier',\r\n        'Février',\r\n        'Mars',\r\n        'Avril',\r\n        'Mai',\r\n        'Juin',\r\n        'Juillet',\r\n        'Août',\r\n        'Septembre',\r\n        'Octobre',\r\n        'Novembre',\r\n        'Décembre',\r\n    ],\r\n    tr: [\r\n        'Ocak',\r\n        'Şubat',\r\n        'Mart',\r\n        'Nisan',\r\n        'Mayıs',\r\n        'Haziran',\r\n        'Temmuz',\r\n        'Ağustos',\r\n        'Eylül',\r\n        'Ekim',\r\n        'Kasım',\r\n        'Aralık',\r\n    ],\r\n    zh: [\r\n        '一月',\r\n        '二月',\r\n        '三月',\r\n        '四月',\r\n        '五月',\r\n        '六月',\r\n        '七月',\r\n        '八月',\r\n        '九月',\r\n        '十月',\r\n        '十一月',\r\n        '十二月',\r\n    ],\r\n};\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n\r\n            MMMM: month_names[lang][+values[1]],\r\n            MMM: month_names[lang][+values[1]],\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n\r\nimport { $, animateSVG, createSVG } from './svg_utils';\r\n\r\nimport date_utils from './date_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n        \r\n        //  make changing todos optional\r\n        if(this.gantt.options.allow_resizing){\r\n        \tcreateSVG('rect', {\r\n        \t\tx: bar.getX() + bar.getWidth() - 9,\r\n        \t\ty: bar.getY() + 1,\r\n        \t\twidth: handle_width,\r\n        \t\theight: this.height - 2,\r\n        \t\trx: this.corner_radius,\r\n        \t\try: this.corner_radius,\r\n        \t\tclass: 'handle right',\r\n        \t\tappend_to: this.handle_group,\r\n        \t});\r\n\r\n        \tcreateSVG('rect', {\r\n        \t\tx: bar.getX() + 1,\r\n        \t\ty: bar.getY() + 1,\r\n        \t\twidth: handle_width,\r\n        \t\theight: this.height - 2,\r\n        \t\trx: this.corner_radius,\r\n        \t\try: this.corner_radius,\r\n        \t\tclass: 'handle left',\r\n        \t\tappend_to: this.handle_group,\r\n        \t});\r\n        }\r\n        \r\n        //  make changing progress optional\r\n        if ((this.task.progress && this.task.progress < 100) && this.gantt.options.allow_progress_editing) {\r\n        \tthis.$handle_progress = createSVG('polygon', {\r\n        \t\tpoints: this.get_progress_polygon_points().join(','),\r\n        \t\tclass: 'handle progress',\r\n        \t\tappend_to: this.handle_group,\r\n        \t});\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n\r\n            \r\n            //  add dependency by popup button\r\n            if(this.gantt.dependency_bar != null){\r\n            \tthis.add_dependency();\r\n            }else{\r\n                this.group.classList.toggle('active');\r\n                this.show_popup();\r\n            }\r\n\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            \r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    add_dependency(){\r\n\t\t// already marked a dependency\r\n\t\tvar selected_bar = this.gantt.dependency_bar.task;\r\n\t\tif(selected_bar === null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar changedTask;\r\n\t\t\r\n\t\t// check if tasks are already connected\r\n\t\tif(!this.task.dependencies.includes(selected_bar.id) && !selected_bar.dependencies.includes(this.task.id) && this.task !== selected_bar){\r\n\t\t\t// same start date no dependency\r\n\t\t\tif(this.task._start.getTime() === selected_bar._start.getTime()){\r\n\t    \t\tthis.release_marked_bar();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// check which task starts later\r\n\t\t\tif(this.task._start.getTime() > selected_bar._start.getTime()){\r\n\t\t\t\tchangedTask = this.task;\r\n\t\t\t\tthis.task.dependencies.push(selected_bar.id);\r\n\t\t\t}else{\r\n\t\t\t\tchangedTask = selected_bar;\r\n\t\t\t\tselected_bar.dependencies.push(this.task.id);\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// fire dependencyAdded event\r\n\t\t\tthis.gantt.trigger_event('dependency_add', [changedTask]);\r\n\t      \t// recalculate dependency tree\r\n\t\t\tthis.gantt.setup_dependencies();\r\n\t\t\t// redraw gantt\r\n\t\t\tthis.gantt.render();\r\n\t\t}\r\n\t\tthis.release_marked_bar();\r\n    }\r\n\r\n    release_marked_bar(){\r\n    \t\r\n    \tif(this.gantt.dependency_bar === null){\r\n    \t\treturn;\r\n    \t}\r\n    \t\r\n    \t// remove class\r\n    \tthis.gantt.dependency_bar.group.classList.toggle('selected-for-dependency');\r\n    \t// empty gantt variable\r\n    \tthis.gantt.dependency_bar = null;\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        //  add localization to popup\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html, gantt) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        //  add gantt for dependency action\r\n        this.gantt = gantt;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n            <div class=\"add-dependency-action\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.action = this.parent.querySelector('.add-dependency-action');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n            this.action = this.parent.querySelector('.add-dependency-action');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n        }\r\n\r\n        //  add action to popup\r\n        if(this.gantt.options.allow_dependency_editing){\r\n            if(this.custom_html === null){\r\n            \t// TODO translate\r\n            \tthis.action.textContent = 'Add Dependency';\r\n            }\r\n            \r\n            var popup = this;\r\n            \r\n            // add eventlistener to action button\r\n            this.action.onclick = function() {\r\n                var bar = popup.gantt.get_bar(options.task.id);\r\n                bar.group.classList.toggle('selected-for-dependency');\r\n                \r\n                popup.gantt.dependency_bar = bar;\r\n                popup.hide();\r\n            };\r\n            \r\n        }else{\r\n            this.action.remove();\r\n        }\r\n            \r\n        //  fix popup overlaying bars\r\n        this.parent.style.display = 'block';\r\n        \r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n    }\r\n\r\n    hide() {\r\n\r\n    \tthis.parent.style.display = 'none';\r\n      this.parent.style.left = 0;\r\n\r\n    }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n\r\nimport './gantt.scss';\r\n\r\nimport { $, createSVG } from './svg_utils';\r\n\r\nimport Arrow from './arrow';\r\nimport Bar from './bar';\r\nimport Popup from './popup';\r\nimport date_utils from './date_utils';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n            allow_dragging : true,\r\n            allow_resizing : true,\r\n            allow_progress_editing : true,\r\n        \tallow_dependency_editing : true\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height + this.options.padding + 100,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (\r\n                this.view_is(VIEW_MODE.MONTH) &&\r\n                (date.getMonth() + 1) % 3 === 0\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                    this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                              date,\r\n                              'D MMM',\r\n                              this.options.language\r\n                          )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index] // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n                this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n            \tif(this.dependency_bar != null){\r\n            \t\tthis.dependency_bar.group.classList.toggle('selected-for-dependency');\r\n            \t\tthis.dependency_bar = null;\r\n            \t}\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            // make changing and dragging todos optional\r\n            if (element.classList.contains('left') && this.options.allow_resizing) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right') && this.options.allow_resizing) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper') && this.options.allow_dragging) {\r\n                is_dragging = true;\r\n            }\r\n            \r\n            bar_wrapper.classList.add('active');\r\n\r\n            // use clientX and Y offset doesn't work properly in firefox\r\n            x_on_start = e.clientX;\r\n            y_on_start = e.clientY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            // use clientX and Y offset doesn't work properly in firefox\r\n            const dx = e.clientX - x_on_start;\r\n            const dy = e.clientY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                // reset value, otherwise event fires multiple times\r\n                $bar.finaldx = 0;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n        \r\n        // make changing progress optional\r\n        if(this.options.allow_progress_editing){\r\n        \tthis.bind_bar_progress();\r\n        }\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            // use clientX and Y offset doesn't work properly in firefox\r\n            x_on_start = e.clientX;\r\n            y_on_start = e.clientY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            // use clientX and Y offset doesn't work properly in firefox\r\n            let dx = e.clientX - x_on_start;\r\n            let dy = e.clientY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            \r\n            // reset value, otherwise event fires multiple times\r\n            $bar_progress.finaldx = 0;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html,\r\n                this\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","values","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","split","forEach","addEventListener","e","delegatedTarget","target","closest","call","this","matches","parentNode","value","getAttribute","key","Arrow","constructor","gantt","from_task","to_task","calculate_path","draw","options","allow_dependency_editing","setup_dependency_editing","start_x","$bar","getX","getWidth","condition","padding","start_y","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","getY","getHeight","left","d","id","update","index","dependencies","indexOf","splice","remove","setup_dependencies","trigger_event","classList","add","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","de","fr","tr","zh","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","includes","replace","push","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","Bar","set_defaults","prepare","action_completed","prepare_values","prepare_helpers","invalid","height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","bar_group","handle_group","SVGElement","prototype","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","rx","ry","$bar_progress","requestAnimationFrame","update_label_position","bar","allow_resizing","allow_progress_editing","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","dependency_bar","add_dependency","toggle","selected_bar","changedTask","getTime","release_marked_bar","render","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","handle","arrows","arrow","Popup","parent","custom_html","make","hide","action","pointer","show","Error","html","textContent","popup","onclick","position_meta","style","display","HTMLElement","getBoundingClientRect","top","transform","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","allow_dragging","assign","start","end","every","deps","trim","filter","random","toString","generate_id","dependency_map","t","refresh","mode","update_view_scale","setup_dates","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","clientX","clientY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","args","apply","prev_date"],"mappings":"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AAKhB,QAAQgE,SACbhD,KAAKQ,MAAMyC,qBAEXjD,KAAKQ,MAAM0C,cAAc,oBAAqB,CAAClD,KAAKU,QAAQe,UAEhEjF,EAAEuC,GAAGiB,KAAKhB,QAAS,cAAcW,IAC7BK,KAAKhB,QAAQmE,UAAUC,IAAI,YAE/B5G,EAAEuC,GAAGiB,KAAKhB,QAAS,cAAcW,IAC7BK,KAAKhB,QAAQmE,UAAUH,OAAO,aCjH1C,MAAMK,EAAO,OACPC,EAAQ,QACRC,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cAEdC,EAAc,CAChBC,GAAI,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEJC,GAAI,CACN,SACM,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,QAIO,IAAAC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAK/E,MAAM,KAEzBmF,EAAaE,EAAM,GACdrF,MAAMgF,GACNM,KAAKC,GAAQC,SAASD,EAAK,MAChCH,EAAaC,EAAM,IAAMA,EAAM,GAAGrF,MAAMiF,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIM,EAAON,E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"}