{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre',\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro'\n\n    ],\n\n    de: [\n\t\t'Januar',\n        'Februar',\n        'März',\n        'April',\n        'Mai',\n        'Juni',\n        'Juli',\n        'August',\n        'September',\n        'Oktober',\n        'November',\n        'Dezember'\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre',\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık',\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月',\n    ],\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang) {\n    \t//  add localization to format Date\n    \tvar localMonthNames = month_names[lang];\n    \tif(localMonthNames == null)\n    \t\tlocalMonthNames = month_names['en'];\n\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: localMonthNames[+values[1]],\n            MMM: localMonthNames[+values[1]]\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n\n        this.group = createSVG('g', {\n            class:\n                'bar-wrapper ' +\n                (this.task._group ? `${this.task._group.bar_class} ` : '') +\n                (this.task.custom_class || ''),\n            'data-id': this.task.id,\n            'data-group-id': this.task.group_id\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        //  make changing todos optional\n        if(this.gantt.options.enable_slide_edit){\n        \tcreateSVG('rect', {\n        \t\tx: bar.getX() + bar.getWidth() - 9,\n        \t\ty: bar.getY() + 1,\n        \t\twidth: handle_width,\n        \t\theight: this.height - 2,\n        \t\trx: this.corner_radius,\n        \t\try: this.corner_radius,\n        \t\tclass: 'handle right',\n        \t\tappend_to: this.handle_group\n        \t});\n\n        \tcreateSVG('rect', {\n        \t\tx: bar.getX() + 1,\n        \t\ty: bar.getY() + 1,\n        \t\twidth: handle_width,\n        \t\theight: this.height - 2,\n        \t\trx: this.corner_radius,\n        \t\try: this.corner_radius,\n        \t\tclass: 'handle left',\n        \t\tappend_to: this.handle_group\n        \t});\n        }\n\n        //  make changing progress optional\n        if ((this.task.progress && this.task.progress < 100) && this.gantt.options.enable_progress_edit) {\n        \tthis.$handle_progress = createSVG('polygon', {\n        \t\tpoints: this.get_progress_polygon_points().join(','),\n        \t\tclass: 'handle progress',\n        \t\tappend_to: this.handle_group\n        \t});\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            if (e.type === 'click') {\n                this.gantt.trigger_event('click', [this.task]);\n            }\n\n            this.gantt.unselect_all();\n\n            //  add dependency by popup button\n            if(this.gantt.dependencyBar != null){\n            \tthis.add_dependency();\n            }else{\n                this.group.classList.toggle('active');\n                this.show_popup();\n            }\n\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    add_dependency(){\n\t\t// already marked a dependency\n\t\tvar markedTask = this.gantt.dependencyBar.task;\n\t\tif(markedTask == null)\n\t\t\treturn;\n\n\t\tvar changedTask;\n\n\t\t// check if tasks are already connected\n\t\tif(!this.task.dependencies.includes(markedTask.id) && !markedTask.dependencies.includes(this.task.id) && this.task !== markedTask){\n\t\t\t// same start date no dependency\n\t\t\tif(this.task._start.getTime() === markedTask._start.getTime()){\n\t    \t\tthis.release_marked_bar();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check which task starts later\n\t\t\tif(this.task._start.getTime() > markedTask._start.getTime()){\n\t\t\t\tchangedTask = this.task;\n\t\t\t\tthis.task.dependencies.push(markedTask.id);\n\t\t\t}else{\n\t\t\t\tchangedTask = markedTask;\n\t\t\t\tmarkedTask.dependencies.push(this.task.id);\n\t\t\t}\n\n\t\t\t// fire dependencyAdded event\n\t\t\tthis.gantt.trigger_event('dependency_added', [changedTask]);\n\t      \t// recalculate dependency tree\n\t\t\tthis.gantt.setup_dependencies();\n\t\t\t// redraw gantt\n\t\t\tthis.gantt.render();\n\t\t}\n\t\tthis.release_marked_bar();\n    }\n\n    release_marked_bar(){\n    \t// remove class\n    \tthis.gantt.dependencyBar.group.classList.toggle('addArrow');\n    \t// empty gantt variable\n    \tthis.gantt.dependencyBar = null;\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        //  add localization to popup\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title:\n                `<b>${this.task.name}</b>` +\n                (this.task._group ? `<br>${this.task._group.name}` : ''),\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (this.gantt.options.fixed_label_location ||\n\t\tlabel.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n    \tthis.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n        //  add event handling for Arrows\n        if(this.gantt.options.enable_dependency_edit)\n        \tthis.setup_eventListener();\n    }\n    \n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n    \n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n    \n    //  add event handling for Arrows\n    setup_eventListener(){\n        $.on(this.element, 'click', e => {\n        \t//  remove Arrow element, and delete dependency from task\n        \tvar index = this.to_task.task.dependencies.indexOf(this.from_task.task.id);\n        \tthis.to_task.task.dependencies.splice(index, 1);\n        \tthis.element.remove();\n        \tthis.gantt.setup_dependencies();\n\t\t\t// fire dependencyAdded event\n\t\t\tthis.gantt.trigger_event('dependency_removed', [this.to_task.task]);\n\t\t});\n        $.on(this.element, 'mouseenter', e => {\n        \tthis.element.classList.add('hover');\n\t\t});\n        $.on(this.element, 'mouseleave', e => {\n\t\t\tthis.element.classList.remove('hover');\n\t\t});\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html, gantt) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        //  add gantt for dependency action\n        this.gantt = gantt;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n            <div class=\"action\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        //  add action to popup\n        this.action = this.parent.querySelector('.action');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            //  add action to popup\n            if(this.gantt.options.enable_dependency_edit){\n                // TODO make text dynamic\n                this.action.innerHTML = 'add dependency';\n                \n                var popup = this;\n                this.action.onclick = function() {\n                \tvar bar = popup.gantt.get_bar(options.task.id);\n                \tbar.group.classList.toggle('addArrow');\n            \t\t\n                \tpopup.gantt.dependencyBar = bar;\n                \tpopup.hide();\n                \t};\n            }else{\n            \tthis.action.remove();\n            }\n\n        }\n\n    \t//  fix popup overlaying bars\n    \tthis.parent.style.display = 'block';\n\n    \t// set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n    }\n\n    hide() {\n    \t//  fix popup overlaying bars\n    \tthis.parent.style.display = 'none';\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    HOUR: 'Hour',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        // convert groups array to a dictionary for faster lookups\n        options.groups = options.groups.reduce((dict, curr) => {\n            dict[curr.id] = curr;\n            return dict;\n        }, {});\n\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            disable_popup: false,\n            fixed_label_location: false,\n            language: 'en',\n            enable_drag_edit : true,\n        \tenable_slide_edit : true,\n        \tenable_progress_edit : true,\n            groups: {}\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            // task group\n            if (\n                typeof task.group_id !== 'undefined' &&\n                this.options.groups.hasOwnProperty(task.group_id)\n            ) {\n                task._group = this.options.groups[task.group_id];\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n        if (view_mode === VIEW_MODE.HOUR) {\n            this.options.step = 24 / 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (\n                this.view_is(VIEW_MODE.MONTH) &&\n                (date.getMonth() + 1) % 3 === 0\n            ) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            Hour_lower: date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            Hour_upper:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            Hour_lower: this.options.column_width * 24 / 2,\n            Hour_upper: 0,\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n            \tif(this.dependencyBar != null){\n            \t\tthis.dependencyBar.group.classList.toggle('addArrow');\n            \t\tthis.dependencyBar = null;\n            \t}\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            // SJ make changing and dragging todos optional\n            if (element.classList.contains('left') && this.options.enable_slide_edit) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right') && this.options.enable_slide_edit) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper') && this.options.enable_drag_edit) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            // SJ use clientX and Y offset doesn't work properly in firefox\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                // SJ reset value, otherwise event fires multiple times\n                $bar.finaldx = 0;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        // SJ make changing progress optional\n        if(this.options.enable_progress_edit){\n        \tthis.bind_bar_progress();\n        }\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            // SJ use clientX and Y offset doesn't work properly in firefox\n            x_on_start = e.clientX;\n            y_on_start = e.clientY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            // SJ use clientX and Y offset doesn't work properly in firefox\n            let dx = e.clientX - x_on_start;\n            let dy = e.clientY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            console.log(\"changed\");\n\n            // SJ reset value, otherwise event fires multiple times\n            $bar_progress.finaldx = 0;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n\t\tif(!this.options.disable_popup){\n            if (!this.popup) {\n                this.popup = new Popup(\n                    this.popup_wrapper,\n                    this.options.custom_popup_html,\n                    this\n                );\n            }\n            this.popup.show(options);\n\t\t}\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","de","fr","tr","zh","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","localMonthNames","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","$$1","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","_group","bar_class","custom_class","id","group_id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","enable_slide_edit","enable_progress_edit","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","type","trigger_event","unselect_all","dependencyBar","add_dependency","toggle","show_popup","markedTask","changedTask","dependencies","getTime","release_marked_bar","setup_dependencies","render","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","fixed_label_location","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","enable_dependency_edit","setup_eventListener","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","index","indexOf","splice","Popup","parent","custom_html","make","hide","action","pointer","show","Error","html","popup","onclick","position_meta","style","display","HTMLElement","getBoundingClientRect","top","transform","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","groups","dict","default_options","view_modes","view_mode","date_format","custom_popup_html","disable_popup","enable_drag_edit","assign","start","end","every","deps","trim","filter","random","toString","generate_id","hasOwnProperty","dependency_map","t","refresh","mode","update_view_scale","setup_dates","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","clientX","clientY","min_dx","max_dx","$handle","console","log","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","args","apply","prev_date"],"mappings":"kCAAA,MAAMA,EAAO,OACPC,EAAQ,QACRC,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cAEdC,EAAc,CAChBC,GAAI,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAIJC,GAAI,CACN,SACM,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,QAIO,IAAAC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKO,MAAM,KAEzBH,EAAaE,EAAM,GACdC,MAAMN,GACNO,KAAKC,GAAQC,SAASD,EAAK,MAChCJ,EAAaC,EAAM,IAAMA,EAAM,GAAGC,MAAML,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIO,EAAOP,EAUX,OARIC,GAAcA,EAAWO,SACA,GAArBP,EAAWO,SACXP,EAAW,GAAK,KAAOA,EAAW,GAClCA,EAAW,GAAiC,IAA5BQ,WAAWR,EAAW,KAE1CM,EAAOA,EAAKG,OAAOT,IAGhB,IAAIF,QAAQQ,EACtB,CACJ,EAEDI,UAAUf,EAAMgB,GAAY,GACxB,KAAMhB,aAAgBG,MAClB,MAAM,IAAIc,UAAU,yBAExB,MAAMN,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"}